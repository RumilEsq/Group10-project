<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Z8NMdoaqfzkapfWGbHOG+f/Z
</value>
  </data>
</root>